name: Update App Data

on:
  # published-appsリポジトリの変更を監視（repository_dispatchイベント）
  repository_dispatch:
    types: [app-added]
  
  # 手動実行
  workflow_dispatch:
  
  # 毎日自動実行（午前9時 JST）
  schedule:
    - cron: '0 0 * * *'

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        # Node.jsスクリプト実行に必要な依存関係をインストール
        echo "Node.js環境をセットアップしました"
    
    - name: Update app data
      run: |
        echo "🔍 アプリデータを更新中..."
        
        # github-pages-status-checker.cjsを実行してdata.jsonを生成
        node github-pages-status-checker.cjs > github-pages-status.json
        
        # data.jsonとして保存
        cp github-pages-status.json data.json
        
        echo "📊 データ更新完了"
        
        # 統計を表示
        echo "=== 更新統計 ==="
        if [ -f data.json ]; then
          echo "✅ data.json更新成功"
          # JSONから統計情報を抽出（簡易版）
          if command -v jq &> /dev/null; then
            echo "📱 総アプリ数: $(jq '.summary.total // "不明"' data.json)"
            echo "✅ アクセス可能: $(jq '.summary.accessible // "不明"' data.json)"
            echo "❌ アクセス不可: $(jq '.summary.inaccessible // "不明"' data.json)"
          fi
        else
          echo "❌ data.json生成失敗"
          exit 1
        fi
    
    - name: Check for changes
      id: changes
      run: |
        # Gitの変更を確認
        if git diff --quiet data.json; then
          echo "変更なし"
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "変更あり"
          echo "changed=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit and push changes
      if: steps.changes.outputs.changed == 'true'
      run: |
        # Git設定
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # 変更をコミット
        git add data.json
        git commit -m "🤖 Auto-update app data

📊 アプリデータ自動更新:
- github-pages-status-checker.cjsで最新状況をチェック
- published-appsリポジトリの変更を反映
- Firebase App Reviewerで新しいアプリが利用可能

🕐 更新時刻: $(date '+%Y-%m-%d %H:%M:%S UTC')

🤖 Generated by GitHub Actions"
        
        # プッシュ
        git push
        
        echo "✅ 変更をプッシュしました"
    
    - name: No changes detected
      if: steps.changes.outputs.changed == 'false'
      run: |
        echo "📝 変更なし: data.jsonは最新の状態です"

    - name: Summary
      run: |
        echo "=== 実行サマリー ==="
        echo "🕐 実行時刻: $(date)"
        echo "📂 リポジトリ: ${{ github.repository }}"
        echo "🔄 イベント: ${{ github.event_name }}"
        
        if [ "${{ steps.changes.outputs.changed }}" == "true" ]; then
          echo "✅ 結果: データ更新・プッシュ完了"
        else
          echo "📝 結果: 変更なし（最新状態）"
        fi